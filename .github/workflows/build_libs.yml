name: Build libs

on:
  push:
    branches:
      - dev

jobs:
  build_binaries:
    name: Build Binaries
    # needs: verify_version
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: libwhisper_android_arm64.so
            script: build_android.sh arm64
          - os: ubuntu-latest
            artifact_name: libwhisper_android_armv7.so
            script: build_android.sh armv7
          - os: ubuntu-latest
            artifact_name: libwhisper_android_x64.so
            script: build_android.sh x64
          - os: ubuntu-latest
            artifact_name: libwhisper_android_x86.so
            script: build_android.sh x86
          - os: macos-latest
            artifact_name: whisper_ios.xcframework.zip
            script: build_ios.sh
          - os: macos-latest
            artifact_name: libwhisper_macos.dylib
            script: build_macos.sh
          # - os: ubuntu-18.04
          #   artifact_name: libwhisper_linux_x64.so
          #   script: build_linux.sh x64
          # - os: windows-latest
          #   artifact_name: whisper_windows_x64.dll
          #   script: build_windows.sh x64
          # - os: windows-latest
          #   artifact_name: whisper_windows_arm64.dll
          #   script: build_windows.sh
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install CMake
        run: sudo apt-get -y install cmake

      - name: Build Binaries
        run: |
          cd native_lib/
          echo "Building ${{ matrix.artifact_name }} on ${{ matrix.os }}"
          echo "========================================================"
          git submodule update --init --recursive
          bash tools/${{ matrix.script }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.artifact_name }}
          path: native_lib/${{ matrix.artifact_name }}
