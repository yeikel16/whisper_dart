name: Compile Cross Library
on: [workflow_dispatch]

jobs:
  build:
    name: Compile Program dart cross platform Library @azkadev
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            output-name: linux
          - os: macOS-latest
            output-name: macos
          - os: windows-latest
            output-name: windows

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=v$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: "stable"
      - name: check dart version
        run: dart --version
      - name: Install Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update -y
            sudo apt-get install -y make git zlib1g-dev libssl-dev gperf cmake clang libc++-dev libc++abi-dev php-cli cmake g++
            sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install node
            npm install -g appdmg
          fi
        shell: bash
      - name: Mkdir result
        run: mkdir result
      - name: Compile 
        shell: bash
        run: |
          cd native_lib
          if [ "$RUNNER_OS" == "Linux" ]; then
            mkdir build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Release ..
            cmake --build .
            mv ./libwhisper.so ../../result/
          fi
      - name: Publish Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ github.token }}"
          automatic_release_tag: "latest-${{ matrix.output-name }}"
          prerelease: false
          title: "Release ${{ matrix.output-name }}"
          files: |
            result/*